<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <modelVersion>4.0.0</modelVersion>
    
    <!-- Project Information -->
    <groupId>ocean.driftingotter</groupId>
    <artifactId>Project-Pickup</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    
    <name>Project-Pickup</name>
    <description>Audio processing project with graphic equalizer</description>
    <url>http://www.example.com</url>
    
    <!-- Properties -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.release>17</maven.compiler.release>
        
        <!-- Library versions -->
        <junit.version>5.11.0</junit.version>
        <mockito.version>5.12.0</mockito.version>
        <jackson.version>2.17.2</jackson.version>
        <iirj.version>1.7</iirj.version>
        <javalin.version>6.1.3</javalin.version>
        <slf4j.version>2.0.13</slf4j.version>
        <gson.version>2.10.1</gson.version>
        
        <!-- Plugin versions -->
        <maven.compiler.plugin.version>3.13.0</maven.compiler.plugin.version>
        <maven.surefire.plugin.version>3.2.5</maven.surefire.plugin.version>
        <maven.jar.plugin.version>3.4.2</maven.jar.plugin.version>
        <maven.clean.plugin.version>3.4.0</maven.clean.plugin.version>
        <maven.resources.plugin.version>3.3.1</maven.resources.plugin.version>
        <maven.antrun.plugin.version>3.1.0</maven.antrun.plugin.version>
        <exec.maven.plugin.version>3.2.0</exec.maven.plugin.version>
    </properties>
    
    <!-- Dependency Management -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <!-- Dependencies -->
    <dependencies>
        <!-- Main Dependencies -->
        <dependency>
            <groupId>uk.me.berndporr</groupId>
            <artifactId>iirj</artifactId>
            <version>${iirj.version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        
        <dependency>
            <groupId>io.javalin</groupId>
            <artifactId>javalin</artifactId>
            <version>${javalin.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        
        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <!-- Build Configuration -->
    <build>
        <defaultGoal>compile</defaultGoal>
        
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        
        <!-- Plugin Management -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven.antrun.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec.maven.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        
        <!-- Plugins -->
        <plugins>
            <!-- Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <release>17</release>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            
            <!-- Clean Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/resources/native</directory>
                            <includes>
                                <include>linux-x86_64/**/*.so</include>
                                <include>macos-x86_64/**/*.dylib</include>
                                <include>windows-x86_64/**/*.dll</include>
                                <include>configs/**/*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            
            <!-- Create Native Library Directories -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>create-native-directories</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${project.basedir}/src/main/resources/native/linux-x86_64" />
                                <mkdir dir="${project.basedir}/src/main/resources/native/macos-x86_64" />
                                <mkdir dir="${project.basedir}/src/main/resources/native/windows-x86_64" />
                                <mkdir dir="${project.basedir}/src/main/resources/native/configs" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Resources Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>so</nonFilteredFileExtension>
                        <nonFilteredFileExtension>dll</nonFilteredFileExtension>
                        <nonFilteredFileExtension>dylib</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            
            <!-- JAR Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                        <manifestEntries>
                            <Built-By>${user.name}</Built-By>
                            <Build-Jdk>${java.version}</Build-Jdk>
                            <Implementation-Version>${project.version}</Implementation-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            
            <!-- Surefire Plugin for Testing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <useSystemClassLoader>false</useSystemClassLoader>
                    <forkCount>1</forkCount>
                    <reuseForks>true</reuseForks>
                    <systemPropertyVariables>
                        <java.library.path>${project.basedir}/src/main/resources/native/linux-x86_64:${project.basedir}/src/main/resources/native/windows-x86_64:${project.basedir}/src/main/resources/native/macos-x86_64</java.library.path>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>
    
    <!-- OS-Specific Profiles -->
    <profiles>
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>unix</family>
                    <name>linux</name>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <!-- FIX: Added execution for GraphicEqualizer -->
                            <execution>
                                <id>compile-native-eq-linux</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>gcc</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                    <commandlineArgs>-shared -fPIC -O2 -Wall -I"${java.home}/include" -I"${java.home}/include/linux" -o "src/main/resources/native/linux-x86_64/libgraphic_equalizer.so" "src/main/java/NativeFilter/NativeFilter_GraphicEqualizer.c"</commandlineArgs>
                                </configuration>
                            </execution>
                            <!-- FIX: Added execution for Limiter -->
                            <execution>
                                <id>compile-native-limiter-linux</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>gcc</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                    <commandlineArgs>-shared -fPIC -O2 -Wall -I"${java.home}/include" -I"${java.home}/include/linux" -o "src/main/resources/native/linux-x86_64/liblimiter.so" "src/main/java/NativeFilter/NativeFilter_Limiter.c"</commandlineArgs>
                                </configuration>
                            </execution>
                            <!-- FIX: Added execution for ChannelBalancer -->
                            <execution>
                                <id>compile-native-balancer-linux</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>gcc</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                    <commandlineArgs>-shared -fPIC -O2 -Wall -I"${java.home}/include" -I"${java.home}/include/linux" -o "src/main/resources/native/linux-x86_64/libchannelbalancer.so" "src/main/java/NativeFilter/NativeFilter_ChannelBalancer.c"</commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <!-- FIX: Added execution for GraphicEqualizer -->
                            <execution>
                                <id>compile-native-eq-windows</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>gcc</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                    <commandlineArgs>-shared -O2 -Wall -I"${java.home}/include" -I"${java.home}/include/win32" -o "src/main/resources/native/windows-x86_64/graphic_equalizer.dll" "src/main/java/NativeFilter/NativeFilter_GraphicEqualizer.c"</commandlineArgs>
                                </configuration>
                            </execution>
                            <!-- FIX: Added execution for Limiter -->
                            <execution>
                                <id>compile-native-limiter-windows</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>gcc</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                    <commandlineArgs>-shared -O2 -Wall -I"${java.home}/include" -I"${java.home}/include/win32" -o "src/main/resources/native/windows-x86_64/limiter.dll" "src/main/java/NativeFilter/NativeFilter_Limiter.c"</commandlineArgs>
                                </configuration>
                            </execution>
                            <!-- FIX: Added execution for ChannelBalancer -->
                            <execution>
                                <id>compile-native-balancer-windows</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>gcc</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                    <commandlineArgs>-shared -O2 -Wall -I"${java.home}/include" -I"${java.home}/include/win32" -o "src/main/resources/native/windows-x86_64/channelbalancer.dll" "src/main/java/NativeFilter/NativeFilter_ChannelBalancer.c"</commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>mac</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <!-- FIX: Added execution for GraphicEqualizer -->
                            <execution>
                                <id>compile-native-eq-mac</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>gcc</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                    <commandlineArgs>-shared -fPIC -O2 -Wall -I"${java.home}/include" -I"${java.home}/include/darwin" -o "src/main/resources/native/macos-x86_64/libgraphic_equalizer.dylib" "src/main/java/NativeFilter/NativeFilter_GraphicEqualizer.c"</commandlineArgs>
                                </configuration>
                            </execution>
                             <!-- FIX: Added execution for Limiter -->
                            <execution>
                                <id>compile-native-limiter-mac</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>gcc</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                    <commandlineArgs>-shared -fPIC -O2 -Wall -I"${java.home}/include" -I"${java.home}/include/darwin" -o "src/main/resources/native/macos-x86_64/liblimiter.dylib" "src/main/java/NativeFilter/NativeFilter_Limiter.c"</commandlineArgs>
                                </configuration>
                            </execution>
                             <!-- FIX: Added execution for ChannelBalancer -->
                            <execution>
                                <id>compile-native-balancer-mac</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>gcc</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                    <commandlineArgs>-shared -fPIC -O2 -Wall -I"${java.home}/include" -I"${java.home}/include/darwin" -o "src/main/resources/native/macos-x86_64/libchannelbalancer.dylib" "src/main/java/NativeFilter/NativeFilter_ChannelBalancer.c"</commandlineArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
    <!-- Distribution Management -->
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>
    
</project>
